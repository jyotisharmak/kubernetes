
first create a pv with Storage class as manual

 

cat wordpress-pv-gfs.yaml

kind: PersistentVolume
apiVersion: v1
metadata:
  name: gfs-wordpress-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 19Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/wordpress/data"

 

 

 

##next create a claim , with same Storage class

cat wordpress-claim-gfs.yaml

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: gfs-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

 

 

deploy the wordpress with pvc for /var/www/html dir &  an external database mysql , provide database details user/passwd etc

 

cat wpgfs2.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-gfs-deployment
  labels:
    app: wordpress
spec:
  replicas: 2
  selector:
    matchLabels:
      app: wordpress-gfs
      tier: frontendwp
  template:
    metadata:
      labels:
        app: wordpress-gfs
        tier: frontendwp
    spec:
      containers:
      - image: docker.io/bitnami/wordpress:4.9.8
        name: wordpressgfs
        env:
        - name: MARIADB_HOST
          value: "X.X.X.X"
        - name: MARIADB_PORT_NUMBER
          value: "3306"
        - name: WORDPRESS_DATABASE_USER
          value: test
        - name: WORDPRESS_DATABASE_NAME
          value: bitnami_wordpress
        - name: WORDPRESS_DATABASE_PASSWORD
          value: "XXXX"
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: "/var/www/html"
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: gfs-pv-claim

 

 

 

 

###create a service endpoint for above deployment
 

cat wpgfs2-svc.yaml


apiVersion: v1
kind: Service
metadata:
  name: wordpress-gfs-svc
  labels:
    app: wordpress-gfs
    tier: frontendwp
spec:
  ports:
    - port: 80
  selector:
    app: wordpress-gfs
    tier: frontendwp
  type: ClusterIP
